/*
* generated by Xtext
*/
grammar InternalObjectNotation;

options {
	superClass=AbstractInternalContentAssistParser;
	
}

@lexer::header {
package org.ollabaca.on.ui.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.ollabaca.on.ui.contentassist.antlr.internal; 

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ui.editor.contentassist.antlr.internal.DFA;
import org.ollabaca.on.services.ObjectNotationGrammarAccess;

}

@parser::members {
 
 	private ObjectNotationGrammarAccess grammarAccess;
 	
    public void setGrammarAccess(ObjectNotationGrammarAccess grammarAccess) {
    	this.grammarAccess = grammarAccess;
    }
    
    @Override
    protected Grammar getGrammar() {
    	return grammarAccess.getGrammar();
    }
    
    @Override
    protected String getValueForTokenName(String tokenName) {
    	return tokenName;
    }

}




// Entry rule entryRuleUnit
entryRuleUnit 
:
{ before(grammarAccess.getUnitRule()); }
	 ruleUnit
{ after(grammarAccess.getUnitRule()); } 
	 EOF 
;

// Rule Unit
ruleUnit
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getUnitAccess().getGroup()); }
(rule__Unit__Group__0)
{ after(grammarAccess.getUnitAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleValue
entryRuleValue 
:
{ before(grammarAccess.getValueRule()); }
	 ruleValue
{ after(grammarAccess.getValueRule()); } 
	 EOF 
;

// Rule Value
ruleValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getValueAccess().getAlternatives()); }
(rule__Value__Alternatives)
{ after(grammarAccess.getValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleLiteral
entryRuleLiteral 
:
{ before(grammarAccess.getLiteralRule()); }
	 ruleLiteral
{ after(grammarAccess.getLiteralRule()); } 
	 EOF 
;

// Rule Literal
ruleLiteral
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getLiteralAccess().getAlternatives()); }
(rule__Literal__Alternatives)
{ after(grammarAccess.getLiteralAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleImport
entryRuleImport 
:
{ before(grammarAccess.getImportRule()); }
	 ruleImport
{ after(grammarAccess.getImportRule()); } 
	 EOF 
;

// Rule Import
ruleImport
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getImportAccess().getGroup()); }
(rule__Import__Group__0)
{ after(grammarAccess.getImportAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleContainer
entryRuleContainer 
:
{ before(grammarAccess.getContainerRule()); }
	 ruleContainer
{ after(grammarAccess.getContainerRule()); } 
	 EOF 
;

// Rule Container
ruleContainer
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getContainerAccess().getGroup()); }
(rule__Container__Group__0)
{ after(grammarAccess.getContainerAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstance
entryRuleInstance 
:
{ before(grammarAccess.getInstanceRule()); }
	 ruleInstance
{ after(grammarAccess.getInstanceRule()); } 
	 EOF 
;

// Rule Instance
ruleInstance
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstanceAccess().getGroup()); }
(rule__Instance__Group__0)
{ after(grammarAccess.getInstanceAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleSlot
entryRuleSlot 
:
{ before(grammarAccess.getSlotRule()); }
	 ruleSlot
{ after(grammarAccess.getSlotRule()); } 
	 EOF 
;

// Rule Slot
ruleSlot
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getSlotAccess().getGroup()); }
(rule__Slot__Group__0)
{ after(grammarAccess.getSlotAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleArray
entryRuleArray 
:
{ before(grammarAccess.getArrayRule()); }
	 ruleArray
{ after(grammarAccess.getArrayRule()); } 
	 EOF 
;

// Rule Array
ruleArray
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getArrayAccess().getGroup()); }
(rule__Array__Group__0)
{ after(grammarAccess.getArrayAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleStringValue
entryRuleStringValue 
:
{ before(grammarAccess.getStringValueRule()); }
	 ruleStringValue
{ after(grammarAccess.getStringValueRule()); } 
	 EOF 
;

// Rule StringValue
ruleStringValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getStringValueAccess().getValueAssignment()); }
(rule__StringValue__ValueAssignment)
{ after(grammarAccess.getStringValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleBooleanValue
entryRuleBooleanValue 
:
{ before(grammarAccess.getBooleanValueRule()); }
	 ruleBooleanValue
{ after(grammarAccess.getBooleanValueRule()); } 
	 EOF 
;

// Rule BooleanValue
ruleBooleanValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getBooleanValueAccess().getAlternatives()); }
(rule__BooleanValue__Alternatives)
{ after(grammarAccess.getBooleanValueAccess().getAlternatives()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNullValue
entryRuleNullValue 
:
{ before(grammarAccess.getNullValueRule()); }
	 ruleNullValue
{ after(grammarAccess.getNullValueRule()); } 
	 EOF 
;

// Rule NullValue
ruleNullValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNullValueAccess().getGroup()); }
(rule__NullValue__Group__0)
{ after(grammarAccess.getNullValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleNumberValue
entryRuleNumberValue 
:
{ before(grammarAccess.getNumberValueRule()); }
	 ruleNumberValue
{ after(grammarAccess.getNumberValueRule()); } 
	 EOF 
;

// Rule NumberValue
ruleNumberValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getNumberValueAccess().getValueAssignment()); }
(rule__NumberValue__ValueAssignment)
{ after(grammarAccess.getNumberValueAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleInstanceRef
entryRuleInstanceRef 
:
{ before(grammarAccess.getInstanceRefRule()); }
	 ruleInstanceRef
{ after(grammarAccess.getInstanceRefRule()); } 
	 EOF 
;

// Rule InstanceRef
ruleInstanceRef
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getInstanceRefAccess().getValueAssignment()); }
(rule__InstanceRef__ValueAssignment)
{ after(grammarAccess.getInstanceRefAccess().getValueAssignment()); }
)

;
finally {
	restoreStackSize(stackSize);
}



// Entry rule entryRuleEnumValue
entryRuleEnumValue 
:
{ before(grammarAccess.getEnumValueRule()); }
	 ruleEnumValue
{ after(grammarAccess.getEnumValueRule()); } 
	 EOF 
;

// Rule EnumValue
ruleEnumValue
    @init {
		int stackSize = keepStackSize();
    }
	:
(
{ before(grammarAccess.getEnumValueAccess().getGroup()); }
(rule__EnumValue__Group__0)
{ after(grammarAccess.getEnumValueAccess().getGroup()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Value__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getValueAccess().getInstanceParserRuleCall_0()); }
	ruleInstance
{ after(grammarAccess.getValueAccess().getInstanceParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getValueAccess().getArrayParserRuleCall_1()); }
	ruleArray
{ after(grammarAccess.getValueAccess().getArrayParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getValueAccess().getInstanceRefParserRuleCall_2()); }
	ruleInstanceRef
{ after(grammarAccess.getValueAccess().getInstanceRefParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getValueAccess().getLiteralParserRuleCall_3()); }
	ruleLiteral
{ after(grammarAccess.getValueAccess().getLiteralParserRuleCall_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Literal__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getLiteralAccess().getStringValueParserRuleCall_0()); }
	ruleStringValue
{ after(grammarAccess.getLiteralAccess().getStringValueParserRuleCall_0()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getBooleanValueParserRuleCall_1()); }
	ruleBooleanValue
{ after(grammarAccess.getLiteralAccess().getBooleanValueParserRuleCall_1()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getNullValueParserRuleCall_2()); }
	ruleNullValue
{ after(grammarAccess.getLiteralAccess().getNullValueParserRuleCall_2()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getNumberValueParserRuleCall_3()); }
	ruleNumberValue
{ after(grammarAccess.getLiteralAccess().getNumberValueParserRuleCall_3()); }
)

    |(
{ before(grammarAccess.getLiteralAccess().getEnumValueParserRuleCall_4()); }
	ruleEnumValue
{ after(grammarAccess.getLiteralAccess().getEnumValueParserRuleCall_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__Alternatives
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getValueAssignment_0()); }
(rule__BooleanValue__ValueAssignment_0)
{ after(grammarAccess.getBooleanValueAccess().getValueAssignment_0()); }
)

    |(
{ before(grammarAccess.getBooleanValueAccess().getValueAssignment_1()); }
(rule__BooleanValue__ValueAssignment_1)
{ after(grammarAccess.getBooleanValueAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}




rule__Unit__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unit__Group__0__Impl
	rule__Unit__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getUnitAccess().getImportsAssignment_0()); }
(rule__Unit__ImportsAssignment_0)
{ after(grammarAccess.getUnitAccess().getImportsAssignment_0()); }
)
(
{ before(grammarAccess.getUnitAccess().getImportsAssignment_0()); }
(rule__Unit__ImportsAssignment_0)*
{ after(grammarAccess.getUnitAccess().getImportsAssignment_0()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unit__Group__1__Impl
	rule__Unit__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getContainerAssignment_1()); }
(rule__Unit__ContainerAssignment_1)?
{ after(grammarAccess.getUnitAccess().getContainerAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Unit__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Unit__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getUnitAccess().getInstancesAssignment_2()); }
(rule__Unit__InstancesAssignment_2)
{ after(grammarAccess.getUnitAccess().getInstancesAssignment_2()); }
)
(
{ before(grammarAccess.getUnitAccess().getInstancesAssignment_2()); }
(rule__Unit__InstancesAssignment_2)*
{ after(grammarAccess.getUnitAccess().getInstancesAssignment_2()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}








rule__Import__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__0__Impl
	rule__Import__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getImportKeyword_0()); }

	'import' 

{ after(grammarAccess.getImportAccess().getImportKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Import__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Import__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Import__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getNameAssignment_1()); }
(rule__Import__NameAssignment_1)
{ after(grammarAccess.getImportAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Container__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Container__Group__0__Impl
	rule__Container__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerAccess().getContainerKeyword_0()); }

	'container' 

{ after(grammarAccess.getContainerAccess().getContainerKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Container__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Container__Group__1__Impl
	rule__Container__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerAccess().getInstanceAssignment_1()); }
(rule__Container__InstanceAssignment_1)
{ after(grammarAccess.getContainerAccess().getInstanceAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Container__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Container__Group__2__Impl
	rule__Container__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerAccess().getNumberSignKeyword_2()); }

	'#' 

{ after(grammarAccess.getContainerAccess().getNumberSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Container__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Container__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Container__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerAccess().getFeatureAssignment_3()); }
(rule__Container__FeatureAssignment_3)
{ after(grammarAccess.getContainerAccess().getFeatureAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Instance__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__0__Impl
	rule__Instance__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getInstanceAction_0()); }
(

)
{ after(grammarAccess.getInstanceAccess().getInstanceAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__1__Impl
	rule__Instance__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getGroup_1()); }
(rule__Instance__Group_1__0)?
{ after(grammarAccess.getInstanceAccess().getGroup_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__2__Impl
	rule__Instance__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getGroup_2()); }
(rule__Instance__Group_2__0)?
{ after(grammarAccess.getInstanceAccess().getGroup_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__3__Impl
	rule__Instance__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getGroup_3()); }
(rule__Instance__Group_3__0)?
{ after(grammarAccess.getInstanceAccess().getGroup_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__4
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__4__Impl
	rule__Instance__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__4__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getGroup_4()); }
(rule__Instance__Group_4__0)*
{ after(grammarAccess.getInstanceAccess().getGroup_4()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__5
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__5__Impl
	rule__Instance__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__5__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getGroup_5()); }
(rule__Instance__Group_5__0)*
{ after(grammarAccess.getInstanceAccess().getGroup_5()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__6
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__6__Impl
	rule__Instance__Group__7
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__6__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getGroup_6()); }
(rule__Instance__Group_6__0)?
{ after(grammarAccess.getInstanceAccess().getGroup_6()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__7
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__7__Impl
	rule__Instance__Group__8
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__7__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getNewKeyword_7()); }

	'new' 

{ after(grammarAccess.getInstanceAccess().getNewKeyword_7()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__8
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__8__Impl
	rule__Instance__Group__9
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__8__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getTypeAssignment_8()); }
(rule__Instance__TypeAssignment_8)
{ after(grammarAccess.getInstanceAccess().getTypeAssignment_8()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__9
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__9__Impl
	rule__Instance__Group__10
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__9__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getLeftCurlyBracketKeyword_9()); }

	'{' 

{ after(grammarAccess.getInstanceAccess().getLeftCurlyBracketKeyword_9()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__10
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__10__Impl
	rule__Instance__Group__11
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__10__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getSlotsAssignment_10()); }
(rule__Instance__SlotsAssignment_10)*
{ after(grammarAccess.getInstanceAccess().getSlotsAssignment_10()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group__11
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group__11__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group__11__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getRightCurlyBracketKeyword_11()); }

	'}' 

{ after(grammarAccess.getInstanceAccess().getRightCurlyBracketKeyword_11()); }
)

;
finally {
	restoreStackSize(stackSize);
}


























rule__Instance__Group_1__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_1__0__Impl
	rule__Instance__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_1__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getTitleKeyword_1_0()); }

	'@title' 

{ after(grammarAccess.getInstanceAccess().getTitleKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_1__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_1__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getTitleAssignment_1_1()); }
(rule__Instance__TitleAssignment_1_1)
{ after(grammarAccess.getInstanceAccess().getTitleAssignment_1_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Instance__Group_2__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_2__0__Impl
	rule__Instance__Group_2__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_2__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getAbstractKeyword_2_0()); }

	'@abstract' 

{ after(grammarAccess.getInstanceAccess().getAbstractKeyword_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_2__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_2__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_2__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getAbstractAssignment_2_1()); }
(rule__Instance__AbstractAssignment_2_1)
{ after(grammarAccess.getInstanceAccess().getAbstractAssignment_2_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Instance__Group_3__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_3__0__Impl
	rule__Instance__Group_3__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_3__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getDocKeyword_3_0()); }

	'@doc' 

{ after(grammarAccess.getInstanceAccess().getDocKeyword_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_3__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_3__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_3__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getDocumentationAssignment_3_1()); }
(rule__Instance__DocumentationAssignment_3_1)
{ after(grammarAccess.getInstanceAccess().getDocumentationAssignment_3_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Instance__Group_4__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_4__0__Impl
	rule__Instance__Group_4__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_4__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getSeeKeyword_4_0()); }

	'@see' 

{ after(grammarAccess.getInstanceAccess().getSeeKeyword_4_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_4__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_4__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_4__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getSeeAssignment_4_1()); }
(rule__Instance__SeeAssignment_4_1)
{ after(grammarAccess.getInstanceAccess().getSeeAssignment_4_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Instance__Group_5__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_5__0__Impl
	rule__Instance__Group_5__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_5__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getTagKeyword_5_0()); }

	'@tag' 

{ after(grammarAccess.getInstanceAccess().getTagKeyword_5_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_5__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_5__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_5__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getTagsAssignment_5_1()); }
(rule__Instance__TagsAssignment_5_1)
{ after(grammarAccess.getInstanceAccess().getTagsAssignment_5_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Instance__Group_6__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_6__0__Impl
	rule__Instance__Group_6__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_6__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getNameAssignment_6_0()); }
(rule__Instance__NameAssignment_6_0)
{ after(grammarAccess.getInstanceAccess().getNameAssignment_6_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Instance__Group_6__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Instance__Group_6__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__Group_6__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getEqualsSignKeyword_6_1()); }

	'=' 

{ after(grammarAccess.getInstanceAccess().getEqualsSignKeyword_6_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__Slot__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slot__Group__0__Impl
	rule__Slot__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Slot__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlotAccess().getSlotAction_0()); }
(

)
{ after(grammarAccess.getSlotAccess().getSlotAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slot__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slot__Group__1__Impl
	rule__Slot__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Slot__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlotAccess().getNameAssignment_1()); }
(rule__Slot__NameAssignment_1)
{ after(grammarAccess.getSlotAccess().getNameAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slot__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slot__Group__2__Impl
	rule__Slot__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Slot__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlotAccess().getEqualsSignKeyword_2()); }

	'=' 

{ after(grammarAccess.getSlotAccess().getEqualsSignKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Slot__Group__3
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Slot__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Slot__Group__3__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlotAccess().getValueAssignment_3()); }
(rule__Slot__ValueAssignment_3)
{ after(grammarAccess.getSlotAccess().getValueAssignment_3()); }
)

;
finally {
	restoreStackSize(stackSize);
}










rule__Array__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__0__Impl
	rule__Array__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_0()); }

	'[' 

{ after(grammarAccess.getArrayAccess().getLeftSquareBracketKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__1__Impl
	rule__Array__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
(
{ before(grammarAccess.getArrayAccess().getValueAssignment_1()); }
(rule__Array__ValueAssignment_1)
{ after(grammarAccess.getArrayAccess().getValueAssignment_1()); }
)
(
{ before(grammarAccess.getArrayAccess().getValueAssignment_1()); }
(rule__Array__ValueAssignment_1)*
{ after(grammarAccess.getArrayAccess().getValueAssignment_1()); }
)
)

;
finally {
	restoreStackSize(stackSize);
}


rule__Array__Group__2
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__Array__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Array__Group__2__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_2()); }

	']' 

{ after(grammarAccess.getArrayAccess().getRightSquareBracketKeyword_2()); }
)

;
finally {
	restoreStackSize(stackSize);
}








rule__NullValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullValue__Group__0__Impl
	rule__NullValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__NullValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullValueAccess().getNullValueAction_0()); }
(

)
{ after(grammarAccess.getNullValueAccess().getNullValueAction_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__NullValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__NullValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__NullValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNullValueAccess().getNullKeyword_1()); }

	'null' 

{ after(grammarAccess.getNullValueAccess().getNullKeyword_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}






rule__EnumValue__Group__0
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumValue__Group__0__Impl
	rule__EnumValue__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group__0__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumValueAccess().getNumberSignKeyword_0()); }

	'#' 

{ after(grammarAccess.getEnumValueAccess().getNumberSignKeyword_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


rule__EnumValue__Group__1
    @init {
		int stackSize = keepStackSize();
    }
:
	rule__EnumValue__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__Group__1__Impl
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumValueAccess().getValueAssignment_1()); }
(rule__EnumValue__ValueAssignment_1)
{ after(grammarAccess.getEnumValueAccess().getValueAssignment_1()); }
)

;
finally {
	restoreStackSize(stackSize);
}







rule__Unit__ImportsAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getImportsImportParserRuleCall_0_0()); }
	ruleImport{ after(grammarAccess.getUnitAccess().getImportsImportParserRuleCall_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__ContainerAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getContainerContainerParserRuleCall_1_0()); }
	ruleContainer{ after(grammarAccess.getUnitAccess().getContainerContainerParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Unit__InstancesAssignment_2
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getUnitAccess().getInstancesInstanceParserRuleCall_2_0()); }
	ruleInstance{ after(grammarAccess.getUnitAccess().getInstancesInstanceParserRuleCall_2_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Import__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getImportAccess().getNameMY_STRINGTerminalRuleCall_1_0()); }
	RULE_MY_STRING{ after(grammarAccess.getImportAccess().getNameMY_STRINGTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Container__InstanceAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerAccess().getInstanceInstanceCrossReference_1_0()); }
(
{ before(grammarAccess.getContainerAccess().getInstanceInstanceFQNTerminalRuleCall_1_0_1()); }
	RULE_FQN{ after(grammarAccess.getContainerAccess().getInstanceInstanceFQNTerminalRuleCall_1_0_1()); }
)
{ after(grammarAccess.getContainerAccess().getInstanceInstanceCrossReference_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Container__FeatureAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getContainerAccess().getFeatureIDTerminalRuleCall_3_0()); }
	RULE_ID{ after(grammarAccess.getContainerAccess().getFeatureIDTerminalRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__TitleAssignment_1_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getTitleMY_STRINGTerminalRuleCall_1_1_0()); }
	RULE_MY_STRING{ after(grammarAccess.getInstanceAccess().getTitleMY_STRINGTerminalRuleCall_1_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__AbstractAssignment_2_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getAbstractMY_STRINGTerminalRuleCall_2_1_0()); }
	RULE_MY_STRING{ after(grammarAccess.getInstanceAccess().getAbstractMY_STRINGTerminalRuleCall_2_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__DocumentationAssignment_3_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getDocumentationMY_STRINGTerminalRuleCall_3_1_0()); }
	RULE_MY_STRING{ after(grammarAccess.getInstanceAccess().getDocumentationMY_STRINGTerminalRuleCall_3_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__SeeAssignment_4_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getSeeInstanceCrossReference_4_1_0()); }
(
{ before(grammarAccess.getInstanceAccess().getSeeInstanceFQNTerminalRuleCall_4_1_0_1()); }
	RULE_FQN{ after(grammarAccess.getInstanceAccess().getSeeInstanceFQNTerminalRuleCall_4_1_0_1()); }
)
{ after(grammarAccess.getInstanceAccess().getSeeInstanceCrossReference_4_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__TagsAssignment_5_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getTagsIDTerminalRuleCall_5_1_0()); }
	RULE_ID{ after(grammarAccess.getInstanceAccess().getTagsIDTerminalRuleCall_5_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__NameAssignment_6_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_6_0_0()); }
	RULE_ID{ after(grammarAccess.getInstanceAccess().getNameIDTerminalRuleCall_6_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__TypeAssignment_8
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getTypeIDTerminalRuleCall_8_0()); }
	RULE_ID{ after(grammarAccess.getInstanceAccess().getTypeIDTerminalRuleCall_8_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Instance__SlotsAssignment_10
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceAccess().getSlotsSlotParserRuleCall_10_0()); }
	ruleSlot{ after(grammarAccess.getInstanceAccess().getSlotsSlotParserRuleCall_10_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slot__NameAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlotAccess().getNameIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getSlotAccess().getNameIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Slot__ValueAssignment_3
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getSlotAccess().getValueValueParserRuleCall_3_0()); }
	ruleValue{ after(grammarAccess.getSlotAccess().getValueValueParserRuleCall_3_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__Array__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getArrayAccess().getValueValueParserRuleCall_1_0()); }
	ruleValue{ after(grammarAccess.getArrayAccess().getValueValueParserRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__StringValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getStringValueAccess().getValueMY_STRINGTerminalRuleCall_0()); }
	RULE_MY_STRING{ after(grammarAccess.getStringValueAccess().getValueMY_STRINGTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__ValueAssignment_0
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getValueTrueKeyword_0_0()); }
(
{ before(grammarAccess.getBooleanValueAccess().getValueTrueKeyword_0_0()); }

	'true' 

{ after(grammarAccess.getBooleanValueAccess().getValueTrueKeyword_0_0()); }
)

{ after(grammarAccess.getBooleanValueAccess().getValueTrueKeyword_0_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__BooleanValue__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getBooleanValueAccess().getValueFalseKeyword_1_0()); }
(
{ before(grammarAccess.getBooleanValueAccess().getValueFalseKeyword_1_0()); }

	'false' 

{ after(grammarAccess.getBooleanValueAccess().getValueFalseKeyword_1_0()); }
)

{ after(grammarAccess.getBooleanValueAccess().getValueFalseKeyword_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__NumberValue__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getNumberValueAccess().getValueNUMBERTerminalRuleCall_0()); }
	RULE_NUMBER{ after(grammarAccess.getNumberValueAccess().getValueNUMBERTerminalRuleCall_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__InstanceRef__ValueAssignment
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getInstanceRefAccess().getValueInstanceCrossReference_0()); }
(
{ before(grammarAccess.getInstanceRefAccess().getValueInstanceFQNTerminalRuleCall_0_1()); }
	RULE_FQN{ after(grammarAccess.getInstanceRefAccess().getValueInstanceFQNTerminalRuleCall_0_1()); }
)
{ after(grammarAccess.getInstanceRefAccess().getValueInstanceCrossReference_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}

rule__EnumValue__ValueAssignment_1
    @init {
		int stackSize = keepStackSize();
    }
:
(
{ before(grammarAccess.getEnumValueAccess().getValueIDTerminalRuleCall_1_0()); }
	RULE_ID{ after(grammarAccess.getEnumValueAccess().getValueIDTerminalRuleCall_1_0()); }
)

;
finally {
	restoreStackSize(stackSize);
}


RULE_MY_STRING : '"' ('\\"'|~('"'))* '"';

RULE_NUMBER : ('0'|'-'? '1'..'9' ('0'..'9')* ('.' ('0'..'9')+)? ('e' ('+'|'-') '1'..'9' ('0'..'9')*)?);

RULE_FQN : ('/' RULE_ID)*;

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9'|'-'|'.')*;

RULE_LONG_STRING : '("' ( options {greedy=false;} : . )*'")';

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'"')))* '"'|'\'' ('\\' ('b'|'t'|'n'|'f'|'r'|'u'|'"'|'\''|'\\')|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;


